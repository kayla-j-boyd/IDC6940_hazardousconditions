---
title: "Survival of the Fittest: Cox Regression"
subtitle: "Capstone 6940"
author: "Hazardous Conditions: Kayla Boyd & Hermela Shimelis"
execute:
  echo: true
  warning: false
  message: false
  error: false
format: 
  revealjs:
    scrollable: true
    theme: moon
bibliography: references.bib
csl: ieee.csl
embed-resources: true
slide-number: false
width: 1920
height: 1080
df-print: paged
html-math-method: katex
editor: visual
pdf-separate-fragments: true
fig-align: center
---

## Intro to Cox Regression

![](sotf_cap.png){fig-align="center"}

-   Cox regression is a popular regression modeling method used to predict survival rates given certain covariates.

    -   "Survival" can refer to the development of a symptom, time to relapse after remission, or as a time to death [@Walters2012].

    -   Cox regression model is based on the hazard function $h_x(t)$ with covariates at time t given by:

        $$h_x(t)=h_0(t)\exp(\beta_1x_1 +\beta_2x_2 + \dots + \beta_p x_n) $$ $$h_x(t) = hazard \ function\ $$ $$h_0(t) = Baseline \ hazard \ function\ $$

        $$\beta_1x_1 +\beta_2x_2 + \dots + \beta_p x_n = linear\ combination\ of \ covariates\ and\ their\ coefficients$$

    ------------------------------------------------------------------------

## Methods: Making Sense of Cox Regression

::: panel-tabset
## Assumptions and the Hazard Ratio

-   The assumption of a constant relationship between dependent and explanatory variables is called proportional hazards.

-   The hazard function is the probability that an individual will experience an event (death) within a certain time interval [@Walters2012].

    -   If the risk factor is **binary**, the result can be interpreted as the estimated increase in HR in patients with the risk factor vs. those without [@Hafeez2021].

    -   If the risk factor is **continuous**, the HR is interpreted as an increase/decrease in the hazard rate of death due to a 1 unit increase in the variable [@Hafeez2021].

## Testing Proportional Hazards

**Graphical strategies to assess proportionality assumption:**

-   Kaplan-Meier Survival Distribution \$S(t)\$: Plot \$S(t)\$ as a function of survival time for each level covariate.

-   Plot the function \$log(-log(S(t)))\$ as a function of the log survival time (log represent natural log).

-   Schoenfeld Residuals

```{r, warning=FALSE, echo=F, message=FALSE}
# Load necessary libraries
library(survival)
library(survminer)

# Load the lung dataset
data(lung)

# Fit a Kaplan-Meier survival curve
fit <- survfit(Surv(time, status) ~ sex, data = lung)

# Plot the Kaplan-Meier survival curves
ggsurvplot(fit, data = lung, 
           pval = TRUE, 
           conf.int = TRUE, 
           risk.table = TRUE, 
           ggtheme = theme_minimal(), 
           legend.title = "Sex",
           legend.labs = c("Male", "Female"))

# Display the plot
#print(ggsurvplot)

```

## Time-Varying Coefficients

-   Failing to meet the assumption of proportional hazards means that the effects between dependent and explanatory variables are **not** constant over time.

-   Time-varying covariates (coefficients) are used when a covariate changes over time during the follow-up period [@Zhang2018].

    -   Example: The effect of the size of a patient's tumor on their chances of survival.

-   Internal time-varying coefficients are affected by survival status and include values that are generated by the subject [@Zhang2018].

    -   A patient's blood pressure levels during a study on cardiovascular events.

-   External time-varying coefficients are pre-determined and external to the subject under study [@Zhang2018].

    -   Pollen levels during a study on patients with asthma.
:::

## Analysis: Corporate Survival

#### By Kayla Boyd

::: panel-tabset
## Data Description

Data Source: [Employee Turnover Data from Kaggle](https://www.kaggle.com/datasets/davinwijaya/employee-turnover/data)

| Variable     | Description                                      |
|--------------|--------------------------------------------------|
| stag         | Experience (time)                                |
| event        | Employee turnover                                |
| gender       | Employee's gender                                |
| age          | Employee's age (year)                            |
| industry     | Employee's industry                              |
| profession   | Employee's profession                            |
| traffic      | From what pipelene employee came to the company. |
| coach        | Presence of a coach (training) on probation      |
| head_gender  | Head (supervisor) gender                         |
| greywage     | The salary does not seem to the tax authorities. |
| way          | Employee's way of transportation                 |
| extraversion | Extroversion score                               |
| independ     | Independence score                               |
| selfcontrol  | Self control score                               |
| anxiety      | Anxiety score                                    |
| novator      | Innovator score                                  |

## Data Preprocessing

``` r
{r, warning=FALSE, echo=F, message=FALSE}

library(readr)
turnover <- read_csv("turnover.csv")
View(turnover)

library(tidyverse) 
library(dplyr)
library(corrplot)
library(RColorBrewer)
library(ggfortify)
library(riskRegression)
library(survival)
library(stringr)
library(zoo)
library(ranger)
library(ggplot2)
library(readxl)
library(MASS)
library(ADGofTest)
library(survminer)
library(car)

# Check for null and duplicate values

cat("Number of missing values :", sum(is.na(turnover)))
cat("Number of duplicates: ", turnover %>%
    duplicated() %>%
    sum())
# Remove duplicate values

turnover <- unique(turnover)

# Check distribution of data

turnover %>%
  ggplot(aes(x = stag, color = factor(event),
                              fill = factor(event))) +
  geom_histogram(aes(y = ..density..), alpha = 0.5) +
  geom_density(alpha = 0.05) + scale_color_brewer(palette = "Dark2") +
  scale_fill_brewer(palette = "Dark2") + theme_minimal() + 
  theme(legend.position = "top")

# Check for censored observations

n <- dim(turnover)[1]
cat((n - sum(turnover$event))/n * 100, "% of observations are censored")

# Separate variable based on type

NUM_COLS <- c("stag", "age", "extraversion", "independ", "selfcontrol", "anxiety", "novator")
CAT_COLS <- c("gender", "industry", "profession", "traffic", "coach", "head_gender", "greywage", "way")

# Transform CAT_COLS into categorical type

    for (COL in CAT_COLS){
    turnover[COL] <- turnover[COL] %>% unlist() %>% factor()}
```

```{r, warning=FALSE, echo=F, message=FALSE}

library(readr)
turnover <- read_csv("turnover.csv")
View(turnover)

library(tidyverse) 
library(dplyr)
library(corrplot)
library(RColorBrewer)
library(ggfortify)
library(riskRegression)
library(survival)
library(stringr)
library(zoo)
library(ranger)
library(ggplot2)
library(readxl)
library(MASS)
library(ADGofTest)
library(survminer)
library(car)

# Check for null and duplicate values

cat("Number of missing values :", sum(is.na(turnover)))
cat("Number of duplicates: ", turnover %>%
    duplicated() %>%
    sum())
# Remove duplicate values

turnover <- unique(turnover)

# Check distribution of data

turnover %>%
  ggplot(aes(x = stag, color = factor(event),
                              fill = factor(event))) +
  geom_histogram(aes(y = ..density..), alpha = 0.5) +
  geom_density(alpha = 0.05) + scale_color_brewer(palette = "Dark2") +
  scale_fill_brewer(palette = "Dark2") + theme_minimal() + 
  theme(legend.position = "top")

# Check for censored observations

n <- dim(turnover)[1]
cat((n - sum(turnover$event))/n * 100, "% of observations are censored")

# Separate variable based on type

NUM_COLS <- c("stag", "age", "extraversion", "independ", "selfcontrol", "anxiety", "novator")
CAT_COLS <- c("gender", "industry", "profession", "traffic", "coach", "head_gender", "greywage", "way")

# Transform CAT_COLS into categorical type

    for (COL in CAT_COLS){
    turnover[COL] <- turnover[COL] %>% unlist() %>% factor()}
```
:::

## Results

::: panel-tabset
## Categorical Histograms

```{r}
# Categorical covariates

# Selection of covariates (that are only discrete)
turnover.cat <- turnover %>% 
                select_if(is.factor) %>% 
                mutate(event = turnover$event)

turnover.cat %>% ggplot(aes(x = gender, color = factor(event),
                            fill = factor(event))) +
  geom_bar(alpha = 0.5) +
  scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") +
  theme_minimal() + theme(legend.position = "top")
turnover.cat %>% ggplot(aes(x = industry, color = factor(event),
                            fill = factor(event))) +
  geom_bar(alpha = 0.5) + 
  scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") +
  theme_minimal() + theme(legend.position = "top")
turnover.cat %>% ggplot(aes(x = profession, color = factor(event),
                            fill = factor(event))) +
  geom_bar(alpha = 0.5) + 
  scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") +
  theme_minimal() + theme(legend.position = "top")
turnover.cat %>% ggplot(aes(x = traffic, color = factor(event),
                            fill = factor(event))) +
  geom_bar(alpha = 0.5) + 
  scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") +
  theme_minimal() + theme(legend.position = "top")
turnover.cat %>% ggplot(aes(x = coach, color = factor(event),
                            fill = factor(event))) +
  geom_bar(alpha = 0.5) + 
  scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") +
  theme_minimal() + theme(legend.position = "top")
turnover.cat %>% ggplot(aes(x = head_gender, color = factor(event),
                            fill = factor(event))) +
  geom_bar(alpha = 0.5) + 
  scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") +
  theme_minimal() + theme(legend.position = "top")
turnover.cat %>% ggplot(aes(x = greywage, color = factor(event),
                            fill = factor(event))) +
  geom_bar(alpha = 0.5) + 
  scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") +
  theme_minimal() + theme(legend.position = "top")
turnover.cat %>% ggplot(aes(x = way, color = factor(event), 
                                     fill = factor(event))) +
  geom_bar(alpha = 0.5) + 
  scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") +
  theme_minimal() + theme(legend.position = "top")
```

## Continuous Histograms

```{r}
# Continuous covariates
turnover %>% ggplot(aes(x = stag, color = factor(event), 
                        fill = factor(event))) +
  geom_histogram(aes(y = ..density..), alpha = 0.5) + 
  geom_density(alpha = 0.05) +  
  scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") +
  theme_minimal() + theme(legend.position = "top")
turnover %>% ggplot(aes(x = event, color = factor(event),
                        fill = factor(event))) +
  geom_histogram(aes(y = ..density..), alpha = 0.5) + 
  geom_density(alpha = 0.05) +
  scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") + 
  theme_minimal() + theme(legend.position = "top")
turnover %>% ggplot(aes(x = age, color = factor(event),
                        fill = factor(event))) +
  geom_histogram(aes(y = ..density..), alpha = 0.5) +
  geom_density(alpha = 0.05) +
  scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") + 
  theme_minimal() + theme(legend.position = "top")
turnover %>% ggplot(aes(x = extraversion, color = factor(event), 
                        fill = factor(event))) + 
  geom_histogram(aes(y = ..density..), alpha = 0.5) + 
  geom_density(alpha = 0.05) + scale_color_brewer(palette = "Dark2") + 
  scale_fill_brewer(palette = "Dark2") + theme_minimal() + 
  theme(legend.position = "top")
turnover %>% ggplot(aes(x = independ, color = factor(event), 
                        fill = factor(event))) +
  geom_histogram(aes(y = ..density..), alpha = 0.5) + 
  geom_density(alpha = 0.05) + 
  scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") + 
  theme_minimal() + theme(legend.position = "top")
turnover %>% ggplot(aes(x = selfcontrol, color = factor(event),
                        fill = factor(event))) +
  geom_histogram(aes(y = ..density..), alpha = 0.5) +
  geom_density(alpha = 0.05) + 
  scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") +
  theme_minimal() + theme(legend.position = "top")
turnover %>% ggplot(aes(x = anxiety, color = factor(event),
                        fill = factor(event))) +
  geom_histogram(aes(y = ..density..), alpha = 0.5) +
  geom_density(alpha = 0.05) + 
  scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") +
  theme_minimal() + theme(legend.position = "top")
turnover %>% ggplot(aes(x = novator, color = factor(event),
                        fill = factor(event))) +
  geom_histogram(aes(y = ..density..), alpha = 0.5) +
  geom_density(alpha = 0.05) + 
  scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") +
  theme_minimal() + theme(legend.position = "top")

```

## Correlation Matrix

```{r}
# Other encoding of discrete variables
turnover.num <- turnover.cat[-9]

levels(turnover.num$gender) <- 1:length(levels(turnover.cat$gender))
levels(turnover.num$industry) <- 1:length(levels(turnover.cat$industry))
levels(turnover.num$profession) <- 1:length(levels(turnover.cat$profession))
levels(turnover.num$traffic) <- 1:length(levels(turnover.cat$traffic))
levels(turnover.num$coach) <- 1:length(levels(turnover.cat$coach))
levels(turnover.num$head_gender) <- 1:length(levels(turnover.cat$head_gender))
levels(turnover.num$greywage) <- 1:length(levels(turnover.cat$greywage))
levels(turnover.num$way) <- 1:length(levels(turnover.cat$way))
turnover.num <- as.data.frame(apply(turnover.num, 2, as.numeric))

turnover.num <- cbind(turnover.num, turnover %>%
    select_if(is.numeric))

# Correlation matrix
corrplot(cor(turnover.num), col = brewer.pal(10, "BrBG"), method = "square", diag = FALSE)
```
:::

## Survival Plots

Now we will plot our categorical variables (gender, industry, profession, traffic, coach, head_gender, greywage, and way) using the Kaplan-Meier Estimation Curve. The Kaplan-Meier allows us to visualize how each category of survival probability differs from the others.

::: panel-tabset
## Gender

```{r}
km_gender<-survfit(Surv(stag, event)~gender, data = turnover, type="kaplan-meier")

ggsurvplot(km_gender, data=turnover,
           conf.int = FALSE,
           ggtheme = theme_minimal(),
           legend.labs = c("female", "male"),
           pval = TRUE,
           pval.method = TRUE)+
  ggtitle("Survival curve based on Gender")
```

## Industry

```{r}
km_industry<-survfit(Surv(stag, event)~industry, data = turnover, type ="kaplan-meier")
ggsurvplot(km_industry, data=turnover,
           conf.int = FALSE,
           ggtheme = theme_minimal(),
           pval = TRUE,
           pval.method = TRUE)+
  ggtitle("Survival curve based on Industry")

```

## Profession

```{r}
km_profession<-survfit(Surv(stag, event)~profession, data = turnover, type="kaplan-meier")
ggsurvplot(km_profession, data=turnover,
           conf.int = FALSE,
           ggtheme = theme_minimal(),
           pval = TRUE,
           pval.method = TRUE)+
  ggtitle("Survival curve based on Profession")
```

## Traffic

```{r}
km_traffic<-survfit(Surv(stag, event)~traffic, data= turnover, type="kaplan-meier")
ggsurvplot(km_traffic, data=turnover,
           conf.int = FALSE,
           ggtheme = theme_minimal(),
           pval = TRUE,
           pval.method = TRUE)+
  ggtitle("Survival curve based on Traffic")
```

## Coach

```{r}
km_coach<-survfit(Surv(stag, event)~coach, data = turnover, type="kaplan-meier")
ggsurvplot(km_coach, data=turnover,
           conf.int = FALSE,
           ggtheme = theme_minimal(),
           pval = TRUE,
           pval.method = TRUE)+
  ggtitle("Survival curve based on Coach")
```

## Head_gender

```{r}
km_headgender<-survfit(Surv(stag, event)~head_gender, data= turnover, type="kaplan-meier")
ggsurvplot(km_headgender, data=turnover,
           conf.int = FALSE,
           ggtheme = theme_minimal(),
           legend.labs = c("female", "male"),
           pval = TRUE,
           pval.method = TRUE)+
  ggtitle("Survival curve based on Head Gender")
```

## Greywage

```{r}
km_greywage<-survfit(Surv(stag, event)~greywage, data = turnover, type ="kaplan-meier")
ggsurvplot(km_greywage, data=turnover,
           conf.int = FALSE,
           ggtheme = theme_minimal(),
           legend.labs = c("grey", "white"),
           pval = TRUE,
           pval.method = TRUE)+
  ggtitle("Survival curve based on Greywage")
```

## Way

```{r}
km_way<-survfit(Surv(stag, event)~way,
                data= turnover,
                type="kaplan-meier")
ggsurvplot(km_way, data=turnover,
           conf.int = FALSE,
           ggtheme = theme_minimal(),
           legend.labs=c("bus", "car", "foot"),
           pval = TRUE,
           pval.method = TRUE)+
  ggtitle("Survival curve based on Commuters(way)")
```
:::

## Modeling the Outcomes

::: panel-tabset
## Crude Model

```{r}
model0<-coxph(Surv(stag, event)~.,
                 data = turnover)
summary(model0)
```

## Refining the Model

We want to refine the model to use the independent variable(s) with the greatest influence from our crude model. To do this, we will use the "step" function in R which iteratively adds or removes variables based on a chosen criterion. For this model we will use the AIC value. The Akaike Information Criterion (AIC) is a statistical metric that evaluates how well a model fits a given set of data.

```{r}
step(model0)
```

Using these results, we can see that the model including independent variables *age, industry, profession, traffic, greywage, selfcontrol*, and *anxiety* produced the most accurate survival model. We will use these variables in our adjusted model.

## Adjusted Model

```{r}
model1<-coxph(Surv(stag, event)~age + industry + profession + traffic + greywage + way + selfcontrol + anxiety,
                data = turnover)
summary(model1)
```

## Hazard Ratios

Hazard ratios above 1 indicate a higher likelihood of the individuals in that category to experience the event (termination) in the given timeframe.

```{r}
hr=exp(model1$coefficients)
hr
```
:::

## Model Comparison

|   | Crude Model | Adjusted Model |
|----|:--:|:--:|
| Covariate | Hazard ratio (95% CI), p-value | Hazard ratio (95% CI), p-value |
| genderm | (0.6977,1.1489) 0.384855 | Excluded |
| **age** | **(1.0076,1.0356) 0.002292** | **(1.00801,1.0337) 0.001349** |
| industryBanks | (0.385,1.6444) 0.537112 | (0.36751,1.5243) 0.424614 |
| industryBuilding | (0.3668,1.725) 0.562272 | (0.35777,1.6425) 0.494175 |
| industryConsult | (0.3234, 1.4235) 0.304934 | (0.30707,1.3058) 0.215967 |
| industryetc | (0.2701,1.1797) 0.128365 | (0.25483,1.0823) 0.08089 |
| industryHoReCa | (0.1807,1.5343) 0.239782 | (0.15933,1.324) 0.149758 |
| **industryIT** | **(0.141,0.658) 0.002482** | **(0.13483,0.6111) 0.001206** |
| **industrymanufacture** | **(0.216,0.9352) 0.032415** | **(0.20195,0.8531) 0.016744** |
| industryMining | (0.2267,1.3199) 0.179465 | (0.21711,1.2319) 0.136485 |
| **industryPharma** | **(0.1426,0.9391) 0.036562** | **(0.13973,0.8899) 0.027324** |
| **industryPowerGeneration** | **(0.1469,0.8631) 0.022261** | **(0.14093,0.7992) 0.013651** |
| **industryRealEstate** | **(0.0562,0.5642) 0.003362** | **(0.05197,0.5066) 0.001745** |
| **industryRetail** | **(0.1729,0.7194) 0.004165** | **(0.16474,0.6627) 0.001818** |
| industryState | (0.2297,1.1466) 0.103875 | (0.21764,1.0505) 0.066154 |
| **industryTelecom** | **(0.1267,0.7348) 0.008119** | **(0.12085,0.6725) 0.004154** |
| **industrytransport** | **(0.1843,0.9868) 0.046482** | **(0.18435,0.9644) 0.040775** |
| professionBusinessDevelopment | (0.6728,4.9436) 0.237597 | (0.67567,4.8254) 0.238702 |
| **professionCommercial** | **(1.0043,7.3408) 0.049022** | **(1.03089,7.2727) 0.043279** |
| professionConsult | (0.638,4.9074) 0.272921 | (0.63753,4.6951) 0.281828 |
| professionEngineer | (0.9446,7.8047) 0.063726 | (0.91679,7.2203) 0.072662 |
| professionetc | (0.6267,4.2195) 0.3176 | (0.61331,4.0715) 0.34336 |
| professionFinance | (0.3765,2.9634) 0.91722 | (0.38398,2.9249) 0.910784 |
| professionHR | (0.5274,2.841) 0.637865 | (0.54258,2.8666) 0.602987 |
| professionIT | (0.409,2.8105) 0.887228 | (0.40656,2.6084) 0.950654 |
| professionLaw | (0.4205,5.3292) 0.53352 | (0.39112,4.8201) 0.620736 |
| **professionmanage** | **(1.3551,9.6256) 0.010245** | **(1.35933,9.565) 0.009974** |
| professionMarketing | (0.8028,5.3221) 0.132411 | (0.79103,5.156) 0.141624 |
| professionPR | (0.6648,8.173) 0.186097 | (0.65107,7.9465) 0.197889 |
| professionSales | (0.6627,4.1455) 0.280002 | (0.6785,4.0634) 0.266774 |
| professionTeaching | (0.6072,5.659) 0.278446 | (0.61406,5.6983) 0.270502 |
| **trafficempjs** | **(1.3655,4.6877) 0.003179** | **(1.28261,4.3232) 0.005729** |
| trafficfriends | (0.5777,2.21) 0.721151 | (0.53583,2.0013) 0.917244 |
| trafficKA | (0.5762,2.3039) 0.688659 | (0.5581,2.2001) 0.769274 |
| trafficrabrecNErab | (0.9421,3.1768) 0.077124 | (0.88821,2.9476) 0.115817 |
| trafficrecNErab | (0.4498,2.0064) 0.893095 | (0.42032,1.8463) 0.736996 |
| trafficreferal | (0.7639,2.7337) 0.257711 | (0.72498,2.554) 0.337642 |
| **trafficyoujs** | **(1.0493,3.5293) 0.034395** | **(1.00196,3.3336) 0.049257** |
| coachno | (0.85,1.316) 0.615221 | Excluded |
| coachyes | (0.9172,1.6628) 0.164329 | Excluded |
| head_genderm | (0.8642,1.2921) 0.590846 | Excluded |
| **greywagewhite** | **(0.4625,0.7863) 0.000187** | **(0.45996,0.7778) 0.000125** |
| **waycar** | **(0.6669,1.0019) 0.052153** | **(0.66226,0.9901) 0.039682** |
| **wayfoot** | **(0.4751,0.9404) 0.020726** | **(0.48798,0.9627) 0.029301** |
| extraversion | (0.9485,1.0899) 0.639236 | Excluded |
| independ | (0.9144,1.052) 0.587962 | Excluded |
| **selfcontrol** | **(0.8904,1.0249) 0.202321** | **(0.90005,0.9838) 0.007353** |
| **anxiety** | **(0.8899,1.0193) 0.158827** | **(0.90432,1.0021) 0.06013** |
| novator | (0.9503,1.0716) 0.766196 | Excluded |

## Predictions

We will now use our adjusted model to predict 3-year survival rates between two employees, one age 25 and one age 55. All other variables will remain the same.

```{r}
new_hire <- data.frame(age = c(25,55), industry = c("IT","IT"), stag= c(36, 36), event= c(0,0), profession = c("manage","manage"), traffic = c("empjs","empjs"), greywage = c("white","white"), way = c("car","car"), independ = c(5,5), selfcontrol = c(5,5), anxiety = c(5,5))

preds <- predict(model1, newdata = new_hire, type = "survival", se.fit = TRUE)

new_hire$prob <- preds$fit
new_hire$lcl <- preds$fit - 1.96*preds$se.fit
new_hire$ucl <- preds$fit + 1.96*preds$se.fit
new_hire
```

Our results show a survival probability of 38% for the 25-year old, and 17% percent for the 55-year old.

## Conclusions

-   Cox regression can be used for any time-to-event data, not necessarily meaning death or disease.
-   Eight variables were said to have a higher influence on survival rate: age, industry, profession, traffic, greywage, way, selfcontrol, anxiety.
-   Study objective is to predict employee attrition to mitigate loss to the company.
-   Companies can provide benefits or stipends (such as bus passes, in this case) to try and retain employees. Specific industries can be focused on to improve retention.

## References

::: {#refs}
:::
